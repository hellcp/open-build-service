:ruby
  save ||= {}
  style ||= { read_only: false }
  uid ||= next_codemirror_uid
  content_for(:head_style, codemirror_style(style))

%div{ class: "card #{'editable' unless style[:read_only]}" }
  - unless style[:read_only]
    .sticky-top.bg-light{ id: "top_#{uid}" }
      .card-header
        .d-flex.justify-content-between
          .btn-group.pl-2
            %button.btn.btn-secondary.btn-sm{ id: "undo_#{uid}", onclick: "editors[#{uid}].Undo(this);", disabled: true }
              %i.fa.fa-undo
              Undo
            %button.btn.btn-secondary.btn-sm{ id: "redo_#{uid}", onclick: "editors[#{uid}].Redo(this);", disabled: true }
              %i.fa.fa-redo
              Redo
          %div
            .btn-group.mr-2
              %button.btn.btn-danger.save.btn-sm{ id: "save_#{uid}", disabled: true }
                %i.fa.fa-save
                Save
              %button.btn.btn-dark.dropdown-toggle.dropdown-toggle-split.btn-sm{ 'data-toggle': 'dropdown', 'aria-haspopup': 'true', 'aria-expanded': 'false' }
              .dropdown-menu.dropdown-menu-right
                .form-group.px-4.pt-3
                  %label
                    Commit message
                  %textarea.form-control.wide-edit{ id: "comment_#{uid}", disabled: true, placeholder: 'Describe your changes' }
                  .d-flex.justify-content-end.mt-2
                    %button.btn.btn-danger.save.btn-sm{ id: "save_#{uid}", disabled: true }
                      %i.fa.fa-save
                      Save
            %button.btn.btn-warning.btn-sm{ data: { 'target': "#settings#{uid}", 'toggle': 'modal' } }
              %i.fa.fa-cog
      .progress.short-progress.rounded-0.d-none{ id: "loading_#{uid}" }
        .progress-bar.progress-bar-striped.progress-bar-animated.w-100

  :ruby
    data = {}
    data['save-url'] = save[:url] if save[:url]
    data['save-method'] = save[:method] if save[:method]
    data['data'] = save[:data] if save[:data]
    text = force_utf8_and_transform_nonprintables(text)

  = text_area_tag("editor_#{uid}", text, cols: '0', rows: '0', data: data, class: 'form-control')

  - unless style[:read_only]
    .sticky-bottom.bg-light{ id: "bottom_#{uid}" }
      .card-footer
        .d-flex.justify-content-end
          %p.small.text-muted.m-0
            line:
            %span{ id: "ln_#{uid}" } 0
            char:
            %span{ id: "ch_#{uid}" } 0

- unless style[:read_only]
  = render partial: 'shared/editor_modal', locals: { uid: uid }

- content_for :ready_function do
  use_codemirror(#{uid}, #{style[:read_only]}, '#{mode}');
